/*
 * ADAS_APP.c
 *
 *  Created on: Dec 13, 2023
 *      Author: AhmedAbogabl
 */
#include "ADAS_APP.h"

void LaneAssist(u8 Copy_u8NormalSpeed) {
    // set default speed
    UART_TransmitString("inside Lane assistant \r\n");

    //	while (1)
    {
        // if Right Sensor and Left Sensor are at White color then it will call forword function
        if ((Dio_ReadChannel(R_S) == 1) && (Dio_ReadChannel(L_S) == 1)) {
            // forward
            UART_TransmitString("inside motor 1  \r\n");
            MOTOR_voidOn(SPEED_MOTOR, MOTOR_CW);
            MOTOR_voidOff(STEERING_MOTOR);
            MOTOR_voidControlSpeed(SPEED_MOTOR, Copy_u8NormalSpeed);
        }

        // if Right Sensor is Black and Left Sensor is White then it will call turn Right function
        if ((Dio_ReadChannel(R_S) == 0) && (Dio_ReadChannel(L_S) == 1)) {
            // turnRight
            UART_TransmitString("inside motor 2  \r\n");
    //        MOTOR_voidControlSpeed(SPEED_MOTOR, 10);
            MOTOR_voidOn(STEERING_MOTOR, MOTOR_CCW);
        }
        // if Right Sensor is White and Left Sensor is Black then it will call turn Left function
        if ((Dio_ReadChannel(R_S) == 1) && (Dio_ReadChannel(L_S) == 0)) {
            // turnLeft
            UART_TransmitString("inside motor 3  \r\n");
      //      MOTOR_voidControlSpeed(SPEED_MOTOR, 10);
            MOTOR_voidOn(STEERING_MOTOR, MOTOR_CW);
        }
        // if Right Sensor and Left Sensor are at Black color then it will call Stop function
        if ((Dio_ReadChannel(R_S) == 0) && (Dio_ReadChannel(L_S) == 0)) {
            // Stop
            UART_TransmitString("inside motor 4  \r\n");
            MOTOR_voidOff(STEERING_MOTOR);
            MOTOR_voidOff(SPEED_MOTOR);
        }
    }
}

void AutoPark(void) {
    // Set default speed
    MOTOR_voidOn(SPEED_MOTOR, MOTOR_CW);
   // MOTOR_voidControlSpeed(SPEED_MOTOR, 10);

    // Move forward until obstacle is detected in front
    while (ADC_ReadChannel(FRONT_SENSOR) < 100) {
        // Continue moving forward until obstacle is detected
        MOTOR_voidOn(STEERING_MOTOR, MOTOR_CW);
    }

    // Stop and delay for a while
    MOTOR_voidOff(STEERING_MOTOR);
    MOTOR_voidOff(SPEED_MOTOR);
    Delay_ms(1000);

    // Turn right until it's clear
    MOTOR_voidOn(STEERING_MOTOR, MOTOR_CCW);
    Delay_ms(1000);

    // Move backward until obstacle is detected at the back
    MOTOR_voidOn(SPEED_MOTOR, MOTOR_CCW);
    while (ADC_ReadChannel(BACK_SENSOR) < 100) {
        // Continue moving backward until obstacle is detected
        MOTOR_voidOn(STEERING_MOTOR, MOTOR_CCW);
    }

    // Stop and delay for a while
    MOTOR_voidOff(STEERING_MOTOR);
    MOTOR_voidOff(SPEED_MOTOR);
    Delay_ms(1000);

    // Turn left until it's clear
    MOTOR_voidOn(STEERING_MOTOR, MOTOR_CW);
    Delay_ms(1000);

    // Stop and drop steering
    MOTOR_voidOff(STEERING_MOTOR);
    MOTOR_voidOff(SPEED_MOTOR);
}

void Delay_ms(u32 Copy_u32Time) {
    for (u32 i = 0; i < Copy_u32Time; i++) {
        for (u16 j = 0; j < 1200; j++) {
            // Adjust this loop for the desired delay
        }
    }
}

